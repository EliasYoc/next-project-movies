import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ConfigStoreProvider } from "./_providers/config-store-provider";
import {
  getTmdbConfiguration,
  TmdbConfigDetails,
} from "./_services/tmdb/configuration";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  movieList,
}: Readonly<{
  children: React.ReactNode;
  movieList: React.ReactNode;
}>) {
  const configRes = await getTmdbConfiguration({ which: "details" });
  const configData = (await configRes.json()) as TmdbConfigDetails;
  console.log(configData);
  console.log("layout");
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ConfigStoreProvider value={configData}>
          {children}
          {movieList}
        </ConfigStoreProvider>
      </body>
    </html>
  );
}
